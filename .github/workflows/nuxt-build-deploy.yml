name: Nuxt Build and Deploy

on:
  push:
    branches:
      - publish/*
      # 複数ブランチを指定する場合は配列形式で
      # - develop
      # - feature/*  # ワイルドカードも使用可能

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate static files
        run: bun run generate

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get branch name
        id: branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

      - name: Deploy to GitHub Pages branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BUILD_DIR=.output/public
          DEPLOY_BRANCH="builds/${{ steps.branch.outputs.branch }}-${{ steps.date.outputs.date }}"
          
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 一時ディレクトリを作成してビルド成果物をコピー
          TEMP_DIR=$(mktemp -d)
          cp -r $BUILD_DIR/* $TEMP_DIR/
          
          # 新しいブランチを作成
          git checkout --orphan $DEPLOY_BRANCH
          git reset --hard
          
          # 一時ディレクトリから必要なファイルのみをコピー
          rm -rf *  # 現在のディレクトリをクリーン
          cp -r $TEMP_DIR/* .
          rm -rf $TEMP_DIR
          
          git add .
          git commit -m "Build from ${{ steps.branch.outputs.branch }} at ${{ steps.date.outputs.date }}"
          
          # タグを作成
          TAG_NAME="build-${{ steps.branch.outputs.branch }}-${{ steps.date.outputs.date }}"
          git tag $TAG_NAME
          
          # GitHubにプッシュ
          git push origin $DEPLOY_BRANCH
          git push origin $TAG_NAME

      - name: Output build info
        run: |
          echo "✅ Build completed successfully"
          echo "📂 Branch: builds/${{ steps.branch.outputs.branch }}-${{ steps.date.outputs.date }}"
          echo "🏷️ Tag: build-${{ steps.branch.outputs.branch }}-${{ steps.date.outputs.date }}"